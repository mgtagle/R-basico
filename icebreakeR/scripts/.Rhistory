setwd("~/rstudio-test")
hi.there <- function() {}
hi.there <- function () {cat("Hello World!\n")}
hi.there()
1 + 1
3 * 3
pi
1 + 3
q()
setwd("D:/Google Drive/stats/R-basico/icebreakeR")
save.image("D:/Google Drive/stats/R-basico/icebreakeR/icebreakeR.RData")
load(icebreakeR.RData)
setwd("D:/Google Drive/stats/R-basico/icebreakeR")
q()
setwd("D:/Google Drive/stats/R-basico/icebreakeR/scripts")
ufc <- read.csv("../data/ufc.csv")
ufc_baf <- 7
ufc_area <- 300
str(ufc)
> head(ufc)
head(ufc)
colSums(is.na(ufc))
ufc$height_m <- ufc$height/10
ufc$dbh_cm <- ufc$dbh/10
str(ufc)
range(ufc$dbh_cm)
range(ufc$height_cm, na.rm = TRUE)
range(ufc$height_m, na.rm = TRUE)
ufc$height_m[ufc$height_m < 0.1] <- NA
range(ufc$height_m, na.rm = TRUE)
table(ufc$species)
ufc$species[ufc$species %in% c("F", "FG")] <- "GF"
ufc$species <- factor(ufc$species)
table(ufc$species)
table(ufc$species[is.na(ufc$height_m)])
boxplot(dbh_cm ~ species, data = ufc, ylab = "Dbh (cm)")
boxplot(height_m ~ species, data = ufc, ylab = "Height (m)")
scatter.smooth(ufc$dbh_cm, ufc$height_m)
hist(ufc$dbh_cm, breaks = (0:50) * 2.5, col = "darkseagreen3",
+ main = "")
hist(ufc$dbh_cm, breaks = (0:50) * 2.5, col = "darkseagreen3", + main = "")
hist(ufc$dbh_cm, breaks = (0:50) * 2.5, col = "darkseagreen3" + main = "")
hist(ufc$dbh_cm, breaks = (0:50) * 2.5, col = "darkseagreen3", main = "")
library(lattice)
histogram(~dbh_cm | species, data = ufc)
tapply(ufc$dbh_cm, ufc$species, length)
tapply(ufc$dbh_cm, ufc$species, mean)
hd_lm_1 <- lm(height_m ~ dbh_cm, data = ufc)
summary(hd_lm_1)
scatter.smooth(ufc$dbh_cm, ufc$height_m)
abline(hd_lm_1, col = "red")
hd_lm_2 <- lm(height_m ~ dbh_cm * species, data = ufc)
xyplot(height_m ~ dbh_cm | species, panel = function(x, y, ...) { panel.xyplot(x, y) panel.abline(lm(y ~ x), col = "blue") panel.abline(hd_lm_1, col = "darkgreen") if (sum(!is.na(y)) > 2) { panel.loess(x, y, span = 1, col = "red") } }, subset = species != "", xlab = "Dbh (cm)", ylab = "Height (m)", data = ufc)
+ }
xyplot(height_m ~ dbh_cm | species, panel = function(x, y, ...) {
panel.xyplot(x, y)
panel.abline(lm(y ~ x), col = "blue")
xyplot(height_m ~ dbh_cm | species, panel = function(x, y, ...) {
panel.xyplot(x, y)
panel.abline(lm(y ~ x), col = "blue")
panel.abline(hd_lm_1, col = "darkgreen")
if (sum(!is.na(y)) > 2) {
panel.loess(x, y, span = 1, col = "red")
}
}, subset = species != "", xlab = "Dbh (cm)",
ylab = "Height (m)", data = ufc)
library(nlme)
hd_lme <- lme(I(log(height_m)) ~ I(log(dbh_cm)) * species,
random = ~ I(log(dbh_cm)) | plot,
na.action = na.exclude,
data = ufc)
predicted_log_heights <- predict(hd_lme, na.action=na.exclude, newdata=ufc)
ufc$p_height_m[!is.na(ufc$dbh_cm)] <- exp(predicted_log_heights)
ufc$p_height_m[!is.na(ufc$height_m)] <- ufc$height_m[!is.na(ufc$height_m)]
summary(ufc$p_height_m)
vol_fvs_ni_bdft <- function(spp, dbh_in, ht_ft){
bf_params <-
data.frame(
species = c("WP", "WL", "DF", "GF", "WH", "WC", "LP", "ES",
"SF", "PP", "HW"),
b0_small = c(26.729, 29.790, 25.332, 34.127, 37.314, 10.472,
8.059, 11.851, 11.403, 50.340, 37.314),
b1_small = c(0.01189, 0.00997, 0.01003, 0.01293, 0.01203,
0.00878, 0.01208, 0.01149, 0.01011, 0.01201, 0.01203),
b0_large = c(32.516, 85.150, 9.522, 10.603, 50.680, 4.064,
14.111, 1.620, 124.425, 298.784, 50.680),
b1_large = c(0.01181, 0.00841, 0.01011, 0.01218, 0.01306,
0.00799, 0.01103, 0.01158, 0.00694, 0.01595, 0.01306))
dimensions <- data.frame(dbh_in = dbh_in,
ht_ft = ht_ft,
species = as.character(spp),
this_order = 1:length(spp))
dimensions <- merge(y=dimensions, x=bf_params, all.y=TRUE, all.x=FALSE)
dimensions <- dimensions[order(dimensions$this_order, decreasing=FALSE),]
b0 <- with(dimensions, ifelse(dbh_in <= 20.5, b0_small, b0_large))
b1 <- with(dimensions, ifelse(dbh_in <= 20.5, b1_small, b1_large))
volumes_bdft <- b0 + b1 * dimensions$dbh_in^2 * dimensions$ht_ft
return(volumes_bdft)
}
cm_to_inches <- 1/2.54
m_to_feet <- 3.281
bd_ft_to_m3 <- 0.002359737
ufc$vol_m3 <- with(ufc, vol_fvs_ni_bdft(species,
dbh_cm * cm_to_inches,
p_height_m * m_to_feet) * bd_ft_to_m3)
ufc$g_ma2 <- ufc$dbh_cm^2 * pi/40000
ufc$tree_factor <- ufc_baf/ufc$g_ma2
ufc$vol_m3_ha <- ufc$vol_m3 * ufc$tree_factor
str(ufc)
ufc_plot <- as.data.frame(cbind(c(1:144), rep(c(12:1),12),
rep(c(1:12), rep(12,12))))
names(ufc_plot) = c("plot","north.n","east.n")
ufc_plot$north = (ufc_plot$north.n - 0.5) * 134.11
ufc_plot$east = (ufc_plot$east.n - 0.5) * 167.64
ufc_plot$vol_m3_ha <- tapply(ufc$vol_m3_ha, ufc$plot,
sum, na.rm = TRUE)
contourplot(vol_m3_ha ~ east * north, main = expression(paste("Volume (",
m^3, "/ha)", sep = "")), xlab = "East (m)",
ylab = "North (m)", region = TRUE, col.regions = terrain.colors(11)[11:1],
data = ufc_plot)
save("ufc_plot", file="../images/ufc_plot.RData")
mean(ufc_plot$vol_m3_ha) * ufc_area
(mean(ufc_plot$vol_m3_ha) + qt(c(0.025,0.975),
df = length(ufc_plot$vol_m3_ha) - 1) *
sd(ufc_plot$vol_m3_ha) / sqrt(length(ufc_plot$vol_m3_ha))) * ufc_area
vol_by_species <- tapply(ufc$vol_m3_ha, list(ufc$plot, ufc$species), sum)
vol_by_species[is.na(vol_by_species)] <- 0
boxplot(as.data.frame(vol_by_species))
(totals <- apply(vol_by_species, 2, mean) * ufc_area)
(ci_bars <- apply(vol_by_species, 2, sd) / sqrt(144) * 1.96 * ufc_area)
boxplot(as.data.frame(vol_by_species),
ylab=expression(paste("Volume (", m^3, ha^-1, ")")))
lines(1:11, (totals - ci_bars) / ufc_area, col="blue")
lines(1:11, (totals + ci_bars) / ufc_area, col="blue")
lines(1:11, totals / ufc_area, col="red")
?mean
??regression
help.search(regression)
help.search("regression")
?lm
help.start()
?length
length(diag(4))# = 16 (4 x 4)
length(ufc)
?seq
seq(1, 9, by = 2)
seq(1, 9, by = pi)
seq(17)
seq(ufc)
?table
?expand.grid
help.search("kernel density estimation")
?density
help.search("principal components analysis")
RSiteSearch("Bates lmer")
RSiteSearch("jackknife")
save.image("D:/Google Drive/stats/R-basico/icebreakeR/scripts/icebreakeR.RData")
load("D:/Google Drive/stats/R-basico/icebreakeR/scripts/icebreakeR.RData")
?range
?table
n <- 100
datos <- data.frame( mi.var = rnorm(n),
sexo    = sample( c("H", "M"), n, replace = T),
edad    = sample( 20:50, n, replace = T))
View(datos)
help.search("clear data")
q()
load("D:/Google Drive/stats/R-basico/icebreakeR/scripts/icebreakeR.RData")
n <- 100
datos <- data.frame( mi.var = rnorm(n),
sexo    = sample( c("H", "M"), n, replace = T),
edad    = sample( 20:50, n, replace = T))
boxplot(sexo ~ edad, data = datos, ylab = "Sexo")
str(datos)
boxplot(edad ~ sexo, data = datos, ylab = "Sexo")
boxplot(edad ~ sexo, data = datos, ylab = "Edad")
table(datos$sexo)
table(datos$edad)
?quantil
?quantile
?cut
?rnorm
??mi.var
?cut
datoscortados <- cut(datos)
?quantile
datos$fact_edad <- cut(datos$edad, breaks = quantile(datos$edad, probs = c(0,.25,.50,.75,1)), labels = c("Jóvenes", "Treintañeros", "Talluditos", "Senior"), include.lowest=T)
str(datos)
table(datos$sexo)
table(datos$fact_edad)
box.edad <- boxplot(mi.var~fact_edad,data=datos)
box.sexo <- boxplot(mi.var~sexo,data=datos,col=c("light blue","pink")
)
box.dos <- boxplot(mi.var ~ sexo, data=datos, col=c("light blue","pink"))
box.edad <- boxplot(mi.var~fact_edad,data=datos)
save.image("D:/Google Drive/stats/R-basico/icebreakeR/scripts/edad-sexo.RData")
